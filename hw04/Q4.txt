BEGIN
--------------------------------------------------------------------
Q1: Implement the following inline functions: 
inline int CircularBufferIsFull(CircularBuffer* que) 
inline int CircularBufferIsEmpty(CircularBuffer* que) 

Starting with the CircularBuffer.h template class from 
developer.mbed.com, I changed to inline its:

    getSize()
	isEmpty()
	isFull()

thus my implementation is:

inline int CircularBufferIsFull( SmallCircularBuffer* que) 
{
	return que->isFull();	
}

inline int CircularBufferIsEmpty( SmallCircularBuffer* que) 
{	
		return que->isEmpty();
}

which due to my changes above, is fully-inline.

--------------------------------------------------------------------
Q2: How to compute "Interrupt Latency"?

Referring to:

    https://developer.mbed.org/users/microguy/notebook/timer0-example-code/
	
I would write code that does:

	Set Timer0 to be stopped, value = 0, with PreScaler == 1.
    Start Timer0.
	Trigger an ISR to be called, i.e., by matching a value in Timer0.
	In the ISR, I would do:
	Stop Timer0.
	
	The difference between the value in Timer0 and the Timer's Match-Value 
	that the Interrupt triggered on will be near the # of clocks of ISR 
	latency.
	
	This time consists of these tasks (from your WK5 slides, pg. 14):
	
		Time [interrupt disabled]
		Time [process higher priority interrupt]
		Time [OS book-keeping]
		Time [Context Switch]

--------------------------------------------------------------------
Q3: Serial pc(USBTX, USBRX); // tx, rx 
    What API (function) do you use to change the baud rate?

	pc.baud(
	 110, 150, 300, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200
	);  // Perhaps plus some faster speeds as well.


--------------------------------------------------------------------
Q4: How many bit(s) does TDO have? Is TDO an input or output type? (Ref: JTAG Pins) 

From your WK4 Slides around pg. 24:

TDO is an output.

Tonight I wasn't able to find its bit patterns spec. 
I'll look more on Sunday.

--------------------------------------------------------------------
Q5:
What is the address of ledArr[0]? 
What is the address of ch? 

================================================
&ch == 0x3f0, from the disassembler comments for these two lines:

    ch = pc.getc(); 
    pc.putc(ch); 
	
&(ledArr[0]) == 0x3ec, from the disassembler comments for this line:

  	ledArr[i] = 0;
} 
================================================
	
/* 
* Enter a hex number [0-9a-fA-F]; Decode it in 4-bit binary format and display them on 4 on board leds. 
*/ 

#include "mbed.h" 

Serial pc(USBTX, USBRX); // tx, rx 
DigitalOut ledArr[4] = {DigitalOut(LED1), DigitalOut(LED2), DigitalOut(LED3), DigitalOut(LED4)}; 
void DisplayLed(int ch) 
{ 
	int i=0;

	if (ch>='0' && ch<='9')
		ch-='0';
	else if (ch>='A' && ch<='F') {
		ch-='A';
		ch+=10;
	} else if (ch>='a' && ch<='f') {
		ch-='a';
		ch+=10;
	} else
		ch=0;

	for (i=0; i<4; i++) { 
		if(ch& (1<<i))
			ledArr[i] = 1; 
		else
			ledArr[i] = 0;
	} 
} 

int main(void) { 
	int ch; 
	pc.baud(9600); 
	pc.printf("\r\nHello World!"); 
	while(1) { 
		pc.printf("\r\nEnter:"); 
		ch = pc.getc(); 
		pc.putc(ch); 
		DisplayLed(ch); 
	} 
}
