Assignment #3 Report:
-------------------

This assignment took about 15 hours, mostly getting the inter-MCU communication working, 
due to adding various print statements to diagnose wires plugged in incorrectly, typing
errors in entering the code, etc. 

Issues along the way:
--------------------
Wiring up the two MCU's consistently, and for easy debugging.
I.e., using green wire associated with a green LED, and 
red wire associated with a red LED, and adding "GREEN" and "RED" 
to #define constants, to simplify debugging.

Findings along the way:
----------------------
There doesn't seem to be any straightforward-to-use Terminal program for Macs.
At least, none of the several we tried worked.

To test, we went through the Truth Table (00, 01, 10, 11) of inputs on both MCU's, 
and confirmed via printf()'s and the LED states, that the correct signals were 
being received and interpreted on the other MCU, in both directions.

Assignment:
----------
C:\git\e4357\hw03\HW3-Assignment.txt

Quiz:
----
https://github.com/Shengliang/e4357/blob/master/fall2014/quiz/Q3.txt

Starting from Sample code here:
------------------------------
Embedded_Systems-book.pdf, pg. 135.

Results/Solutions:
-----------------
My hw03.cpp adds to the sample code on pg. 135, by making it easier to debug 
any mis-signaling between the two MCU's.

I'll work on an I2C version of it further as time permits.

The "I2C Analyzer-p1.png" image shows my Logic Analyzer's output for:

    I2C i2c( p28, p26);        // SDA, SCL;
    while (1)
    {
        i2c.start();
        i2c.write( 0x2a, "S", 1, false);
        i2c.stop();
    }

with no Device 0x2a present on the I2C Bus.

I'll add more once I add the Slave I2C Device.

Added Screenshots for Debugging I2C (ask Slave for its ID only).  
My Slave is an Arduino Nano, running the I2C_v2-Slave.ino sketch.

I forgot to mention, the NACK (0x54), in my Logic Analyzer's I2C 
window is really the SLAVE_ADDRESS7BIT (0x2a), left-shifted 1 bit,
to make room for the 0 or 1 to specify I2C Read or I2C Write.
